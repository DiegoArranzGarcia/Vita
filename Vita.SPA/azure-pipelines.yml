# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

name: Vita.SPA

trigger:
  branches:
    include:
    - develop
    - master
    - feature/*
  paths:
    exclude:
    - 'Vita.API/**'
    - 'Vita.Identity/**'

variables:
  SPADirectory: $(System.DefaultWorkingDirectory)/Vita.SPA
  DownloadArtifacts: $(System.ArtifactsDirectory)/dist
  GulpFile: $(SPADirectory)/gulpfile.js

stages:
- stage: Build
  pool:
    vmImage: 'windows-latest'
  displayName: Build & Generate Artifacts
  jobs:
  - job: BuildAngularApplication
    displayName: 'Build Angular Application'
    steps:
    - task: NodeTool@0
      displayName: 'Install Node.js'
      inputs:
        versionSpec: '12.18.0'
    - task: Bash@3
      inputs:
        targetType: 'inline'
        workingDirectory: $(SPADirectory)
        script: |
            npm install
      displayName: 'npm install'
    - task: Bash@3
      inputs:
        targetType: 'inline'
        workingDirectory: $(SPADirectory)
        script: |
          npm run build --prod
      displayName: 'Build Angular SPA'
  - job: TokenizeConfiguration
    dependsOn: BuildAngularApplication
    displayName: 'Tokenize Configuration'
    steps:
      - task: gulp@0
        inputs:
          gulpFile: $(SPADirectory)/gulpfile.js
          targets: 'tokenize'
          workingDirectory: $(SPADirectory)
          gulpjs: $(SPADirectory)/node_modules/gulp/bin/gulp.js
          enableCodeCoverage: false
        displayName: 'Tokenizing Configuration files'
  - job: PublishArtifacts
    dependsOn: TokenizeConfiguration
    displayName: 'Publish Artifacts'
    steps:
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(SPADirectory)/dist'
        ArtifactName: 'drop'
        publishLocation: 'Container'
- stage: DeployDEV
  pool:
    vmImage: 'windows-latest'
  displayName: 'Deploy into DEV'
  variables:
    - group: DevEnvironment
  jobs:
  - job: DownloadArtifacts
    displayName: 'Download Artifacts'
    steps:
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'drop'
          downloadPath: $(DownloadArtifacts)
  - job: ReplaceTokens
    displayName: 'Replace Tokens with Variables'
    dependsOn: DownloadArtifacts
    steps:
    - task: replacetokens@3
      inputs:
        rootDirectory: $(DownloadArtifacts)
        targetFiles: '**/*.json'
        encoding: 'auto'
        writeBOM: true
        actionOnMissing: 'fail'
        keepToken: true
        tokenPrefix: '__'
        tokenSuffix: '__'
        useLegacyPattern: false
        enableTelemetry: true
      displayName: 'Replazing Tokens'
  - job: DeploySPA
    dependsOn: ReplaceTokens
    displayName: 'Deploy into Blob Storage'
    steps:
    - task: AzureFileCopy@4
      inputs:
        sourcePath: $(DownloadArtifacts)/*'
        azureSubscription: 'Vita Dev'
        destination: 'AzureBlob'
        storage: 'devvitastg'
        containerName: '$web'
        CleanTargetBeforeCopy: true
      displayName: 'Deploy SPA'
    - task: AzureFileCopy@4
      inputs:
        sourcePath: $(DownloadArtifacts)/*.js'
        azureSubscription: 'Vita Dev'
        destination: 'AzureBlob'
        storage: 'devvitastg'
        containerName: '$web'
        CleanTargetBeforeCopy: true
        additionalArgumentsForBlobCopy: '--content-type "application/javascript"'
      displayName: 'Re-Deploy JS files'